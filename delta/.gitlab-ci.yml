include:
  - local : /.gitlab/vars.yml
  - local : /.gitlab/jobs.yml

image: ${CI_IMAGE_GRADLE}

#variables:
#  PROTOC_SRC : rapids/rapids-grpc/src/main/proto
#  PROTOC_OUT : rapids/build/protoc

stages:
  - init  
  - test
  - build
  - package
  - contrib-test
  - check

workflow:
  rules:
    - when : always

delta:init-version:
  stage: init
  extends: .init-next-version

delta:unit-tests:
  stage: test
  script:
    - cd ${CI_PROJECT_DIR}/delta
    - gradle clean test testCodeCoverage jacocoTestReport
  needs: []
  artifacts:
    when: always
    reports:
      junit: ${CI_PROJECT_DIR}/delta/*/build/test-results/test/*.xml
    paths:
      - ${CI_PROJECT_DIR}/delta/*/build/test-results/test/*.xml

delta:install-dist-delta:
  stage: package
  needs:
    - job: delta:init-version
      artifacts: true
  script:
    - cd ${CI_PROJECT_DIR}/delta
    - gradle clean installDist
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/delta/*/build/install/**/*

delta:calcite-service-build-docker:
  stage: package
  extends: .docker-build-job
  variables:
    DOCKER_BUILD_CTX: ${CI_PROJECT_DIR}/delta/service-calcite
    DOCKER_BUILD_FILE: ${CI_PROJECT_DIR}/delta/service-calcite/src/main/docker/Dockerfile
    DOCKER_BUILD_CONTAINER_NAME : delta-calcite-service
  needs:
    - job: delta:install-dist-delta
      artifacts: true
    - job: delta:init-version
      artifacts: true

sonarqube-check:
  stage: check  
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/delta/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
    SONAR_TOKEN: ${SONAR_DELTA_TOKEN}
  needs: []
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - cd ${CI_PROJECT_DIR}/delta
    - gradle clean test jacocoTestReport  jacocoTestReport sonar
  allow_failure: true
  only:
    - dev