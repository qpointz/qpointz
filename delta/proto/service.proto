syntax = "proto3";

package io.qpointz.delta;

option java_multiple_files = true;
option java_package = "io.qpointz.delta.proto";

import "google/protobuf/wrappers.proto";
import "substrait/type.proto";
import "substrait/plan.proto";
import "common.proto";
import "statement.proto";
import "vector.proto";

service DeltaService {
  rpc Handshake (HandshakeRequest) returns (HandshakeResponse);
  rpc ListSchemas(ListSchemasRequest) returns (ListSchemasResponse);
  rpc GetSchema(GetSchemaRequest) returns (GetSchemaResponse);

  rpc ExecPlan(ExecPlanRequest) returns(stream ExecQueryResponse);

  rpc ParseSql(ParseSqlRequest) returns(ParseSqlResponse);
  rpc ExecSql(ExecSqlRequest) returns(stream ExecQueryResponse);
}


message HandshakeRequest {
}

message HandshakeResponse {

  message Capabilities {
    bool supportSql = 3;
  }

  message SecurityContext {
    string principal = 1;
  }

  ProtocolVersion version = 2;
  Capabilities capabilities = 3;
  SecurityContext security = 4;
}


message ListSchemasRequest {
}

message ListSchemasResponse {
  repeated string schemas = 2;
}

message GetSchemaRequest {
  string schemaName = 2;
}

message GetSchemaResponse {
  Schema schema = 2;
}

message ParseSqlRequest {
  SQLStatement statement = 1;
}

message ParseSqlResponse {
  optional substrait.Plan plan = 3;
}

message QueryExecutionConfig {
  int32 batchSize = 1;
}

message ExecPlanRequest {
  QueryExecutionConfig config = 1;
  substrait.Plan plan = 2;
}

message ExecSqlRequest {
  QueryExecutionConfig config = 1;
  SQLStatement statement = 2;
}

message ExecQueryResponse {
  VectorBlock vector = 101;
}
