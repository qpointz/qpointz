syntax = "proto3";

package qpointzdelta;

option java_multiple_files = true;
option java_package = "io.qpointz.delta.proto";

import "google/protobuf/wrappers.proto";
import "substrait/type.proto";
import "common.proto";
import "statement.proto";
import "vector.proto";

service DeltaService {
  rpc Handshake (HandshakeRequest) returns (HandshakeResponse);
  rpc ListSchemas(ListSchemasRequest) returns (ListSchemasResponse);
  rpc GetSchema(GetSchemaRequest) returns (GetSchemaResponse);

  rpc PrepareStatement(PrepareStatementRequest) returns (PrepareStatementResponse);

  rpc ExecuteQueryStream(ExecQueryStreamRequest) returns (stream ExecQueryResponse);


//  rpc ExecQuery(ExecQueryRequest) returns (ExecQueryResponse);
//  rpc ExecQueryStream(ExecQueryStreamRequest) returns (stream ExecQueryResponse);
}


message HandshakeRequest {
}

message HandshakeResponse {
  message Capabilities {
    bool supportSql = 3;
    bool supportPlan = 4;
    bool supportJsonPlan = 5;
  }

  message SecurityContext {
    string principal = 1;
  }

  ResponseStatus status = 1;
  ProtocolVersion version = 2;
  Capabilities capabilities = 3;
  SecurityContext security = 4;
}


message ListSchemasRequest {

}

message ListSchemasResponse {
  ResponseStatus status = 1;
  repeated string schemas = 2;
}


message GetSchemaRequest {
  string schemaName = 2;
}

message GetSchemaResponse {
  ResponseStatus status = 1;
  Schema schema = 2;
}

message PrepareStatementRequest {
  Statement statement = 1;
}

message PrepareStatementResponse {
  ResponseStatus status = 1;
  Statement originalStatement = 2;
  PreparedStatement statement = 3;
}

message ExecQueryStreamRequest {
  PreparedStatement statement = 1;
  uint32 batchSize = 2;
}

message ExecQueryResponse {
  ResponseStatus status = 1;
  VectorBlock vector = 101;
}




/*


message ExecQueryStreamRequest {
  ExecQueryRequest sqlRequest = 1;
  uint32 batchSize = 2;
}

message ExecQueryResponse {
  ResponseStatus status = 1;
  optional Schema schema = 100;
  VectorBlock vector = 101;
}


 */