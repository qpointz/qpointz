include:
  - local : /.gitlab/vars.yml
  - local : /.gitlab/jobs.yml

image:
  name: ${CI_IMAGE_GRADLE}  

variables:
  PROTOC_SRC : rapids/rapids-grpc/src/main/proto
  PROTOC_OUT : rapids/build/protoc

stages:  
  - init
  - test
  - build
  - package
  - contrib-test
  - check

workflow:
  rules:
    - when : always
     
rapids:init-version:
  stage: init
  extends: .init-next-version

rapids:unit-tests:
  stage: test
  script:
    - find ${CI_PROJECT_DIR}/etc/data
    - cd ${CI_PROJECT_DIR}/rapids
    - gradle clean test testCodeCoverageReport
  artifacts:
    reports:
      junit: ./**/*/build/test-results/test/*.xml
    paths:
      - ./**/*/build/reports/jacoco/testCodeCoverageReport/*.xml

rapids:build-protoc-codegen:
  stage: test
  image: ${CI_IMAGE_BASE}  
  script:             
    - mkdir -p ${PROTOC_OUT}/py
    - mkdir -p ${PROTOC_OUT}/net        
    - >
      protoc --proto_path=${PROTOC_SRC}      
      --csharp_out=${PROTOC_OUT}/net      
      --python_out=${PROTOC_OUT}/py  
      --experimental_allow_proto3_optional
      ${PROTOC_SRC}/rapidsservice.proto
  artifacts:
    paths:
      - ${PROTOC_OUT}/**/*      

rapids:jdbc-driver-uber-jar:
  stage: build
  needs:
    - job: rapids:unit-tests
      artifacts: false
  script:
    - cd ${CI_PROJECT_DIR}/rapids
    - gradle shadowJar
  artifacts:
    paths:
      - ./rapids-jdbc-driver/build/libs/*-all.jar

rapids:bootstrap-app:
  stage: build
  needs:
    - job: rapids:unit-tests
      artifacts: false
  script:
    - cd ${CI_PROJECT_DIR}/rapids
    - gradle :rapids-srv-worker:bootstrapApp
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/rapids/rapids-srv-worker/build/rapids-app/*/*

rapids:grpc-service-install-dist:
  stage: build
  needs:
    - job: rapids:unit-tests
      artifacts: false
  script:
    - cd ${CI_PROJECT_DIR}/rapids
    - gradle installDist
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/rapids/rapids-grpc-service/build/install/*/*


rapids:grpc-service-build-docker:
  stage: package
  extends: .docker-build-job
  variables:
    DOCKER_BUILD_CTX: ${CI_PROJECT_DIR}/rapids/rapids-grpc-service
    DOCKER_BUILD_FILE: ${CI_PROJECT_DIR}/rapids/rapids-grpc-service/Dockerfile
    DOCKER_BUILD_CONTAINER_NAME : rapids-grpc-service
  needs:
    - job: rapids:init-version
      artifacts: true
    - job: rapids:grpc-service-install-dist
      artifacts: true

rapids:rapids-worker-build-docker:
  stage: package
  extends: .docker-build-job
  variables:
    DOCKER_BUILD_CTX: ${CI_PROJECT_DIR}/rapids
    DOCKER_BUILD_FILE: ${CI_PROJECT_DIR}/rapids/rapids-srv-worker/src/main/docker/Dockerfile
    DOCKER_BUILD_CONTAINER_NAME : rapids-worker
  needs:
    - job: rapids:init-version
      artifacts: true
    - job: rapids:bootstrap-app
      artifacts: true
      
sonarqube-check:
  stage: check  
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/rapids/.sonar"  # Defines the location of the analysis task cache  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
    SONAR_TOKEN: ${SONAR_RAPIDS_TOKEN}
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - cd ${CI_PROJECT_DIR}/rapids
    - gradle clean test jacocoTestReport jacocoTestReport sonar
  only:
    - rc
    - dev
  allow_failure: true