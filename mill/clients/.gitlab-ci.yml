include:
  - local : /.gitlab/vars.yml
  - local : /.gitlab/jobs.yml

image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/azul/zulu-openjdk:17-latest

stages:
  - init
  - test
  - integration-test
  - build
  - publish

workflow:
  rules:
    - when : always

mill-clients:init-version:
  stage: init
  extends: .init-next-version  

mill-clients:init-certs:
  stage: init
  extends: .init-dev-certs  

mill-clients:init-az-login:
  stage: init
  image: mcr.microsoft.com/azure-cli:cbl-mariner2.0  
  script:
    - az config set core.only_show_errors=yes
    - az login --service-principal -u ${AZ_TEST_SPN} --password ${AZ_TEST_SPN_SECRET} --tenant ${AZ_TEST_TENANT_ID} --allow-no-subscription
    - AZ_TOKEN=$(az account get-access-token --scope ${AZ_TEST_SCOPE}/.default --query "accessToken" --output tsv)
    - echo -n $AZ_TOKEN > ${CI_PROJECT_DIR}/etc/.test_az_token
  artifacts:
    expire_in: "1 days"
    paths:
      - ${CI_PROJECT_DIR}/etc/.test_az_token

.mill:grpc-services:
  services:
    - name: ${CI_REGISTRY_IMAGE}/mill-service-test:${CI_COMMIT_REF_SLUG}
      pull_policy: always
      variables:
        SPRING_PROFILES_ACTIVE: "jdbc-sample"
        AZ_TENANT_ID : $AZ_TEST_TENANT_ID
      alias: backend.local
      entrypoint:
        - "./bin/mill-service"
      command:
        - ""
    - name: ${CI_REGISTRY_IMAGE}/mill-service-test:${CI_COMMIT_REF_SLUG}
      pull_policy: always
      variables:
        SPRING_PROFILES_ACTIVE: "jdbc-sample,auth,tls"
        AZ_TENANT_ID : $AZ_TEST_TENANT_ID
      alias: backend-auth-tls.local
      entrypoint:
        - "./bin/mill-service"
      command:
        - ""
    - name: ${CI_REGISTRY_IMAGE}/azure-functions-test-host:${CI_COMMIT_REF_SLUG}
      pull_policy: always
      alias: func.local
      command: ["func","host","start"]
  needs:
    - job: mill-clients:init-certs
      artifacts: true
    - job: mill-clients:init-az-login
      artifacts: true
    - job: mill-clients:init-version
      artifacts: true
  variables:
    MILL_TEST_PROFILE: "all"
    MILL_HOST: backend.local
    MILL_PORT: "9099"
    MILL_AUTH_TLS_HOST: backend-auth-tls.local
    TLS_CERT_CHAIN: "${CI_PROJECT_DIR}/.certs/client/client.pem"
    TLS_CERT_PK: "${CI_PROJECT_DIR}/.certs/client/client.key"
    TLS_ROOT_CA: "${CI_PROJECT_DIR}/etc/certs/ca.pem"
    MILL_AZ_FUNC_API_URL: "http://func.local:7071/api/"
    CI_DEBUG_SERVICES: "true"
  before_script:
    - !reference [.global-vars, before_script]
    - mkdir -p ${CI_PROJECT_DIR}/.certs/client
    - openssl req -x509 -out ${TLS_CERT_CHAIN} -keyout ${TLS_CERT_PK} -newkey rsa:2048 -nodes -sha256 -subj '/CN=TESTUSER'
    - export MILL_JWT_TOKEN="$(cat ${CI_PROJECT_DIR}/etc/.test_az_token)"
    - find  ${CI_PROJECT_DIR}/etc/certs/

.mill-client:mill-py:test:
  script:    
    - cd ${CI_PROJECT_DIR}/mill/clients/mill-py
    - pip install poetry
    - poetry install --with dev,test
    - poetry run coverage run -m pytest --junitxml build/test-results/test-report-${PY_VER}.xml
    - poetry run coverage xml  -o build/coverage-results/coverage-${PY_VER}.xml
  artifacts:
    expire_in: "5 days"
    reports:
      junit: ${CI_PROJECT_DIR}/mill/clients/mill-py/build/test-results/*.xml
      coverage_report:
        coverage_format: cobertura
        path: ${CI_PROJECT_DIR}/mill/clients/mill-py/build/coverage-results/*.xml
    paths:      
      - ${CI_PROJECT_DIR}/mill/clients/mill-py/build/test-results/*.xml
      - ${CI_PROJECT_DIR}/mill/clients/mill-py/build/coverage-results/*.xml


##python 3.10
mill-client:mill-py:test-3.10:
  stage: integration-test
  extends:
    - .mill:grpc-services
    - .mill-client:mill-py:test
  variables:
    PY_VER: "3.10"
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/python:3.10-slim

##python 3.11
mill-client:mill-py:test-3.11:
  stage: integration-test
  extends:
    - .mill:grpc-services
    - .mill-client:mill-py:test
  variables:
    PY_VER: "3.11"
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/python:3.11-slim   

##python 3.12
mill-client:mill-py:test-3.12:
  stage: integration-test
  extends:
    - .mill:grpc-services
    - .mill-client:mill-py:test
  variables:
    PY_VER: "3.12"
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/python:3.12-slim


##JDBC driver
mill:jdbc-driver:test:
  extends: .mill:grpc-services
  stage: integration-test
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/azul/zulu-openjdk:17-latest
  script:
    - cd ${CI_PROJECT_DIR}/mill/clients
    - ../gradlew --no-daemon --console plain clean test testIT
  artifacts:
    when: always
    expire_in: "15 days"
    reports:
      junit: ${CI_PROJECT_DIR}/mill/**/build/test-results/*/*.xml
      coverage_report:
        coverage_format: jacoco
        path: ${CI_PROJECT_DIR}/mill/build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml
    paths:
      - ${CI_PROJECT_DIR}/mill/**/build/test-results/**/*.xml
      - ${CI_PROJECT_DIR}/mill/**/build/test-results/**/*.xml

mill-clients:install-dist:
  stage: build
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/azul/zulu-openjdk:17-latest
  needs:
    - job: mill-clients:init-version
      artifacts: true    
  script:
    - cd ${CI_PROJECT_DIR}/mill/clients
    - ../gradlew --no-daemon --console plain clean installDist #distTar distZip
  artifacts:
    expire_in: "5 days"
    paths:
      - ${CI_PROJECT_DIR}/mill/clients/*/build/install/**/*
      - ${CI_PROJECT_DIR}/mill/clients/*/build/distributions/*.tar
      - ${CI_PROJECT_DIR}/mill/clients/*/build/distributions/*.zip

mill-clients:mill-sql-line:build-docker:
  stage: publish
  extends: .docker-build-job
  variables:
    DOCKER_BUILD_CTX: ${CI_PROJECT_DIR}/mill/clients/mill-jdbc-shell
    DOCKER_BUILD_FILE: ${CI_PROJECT_DIR}/mill/clients/mill-jdbc-shell/src/main/docker/Dockerfile
    DOCKER_BUILD_CONTAINER_NAME : jdbc-shell
  needs:
    - job: mill-clients:install-dist
      artifacts: true
    - job: mill-clients:init-version
      artifacts: true
    - job: mill:jdbc-driver:test
      artifacts: false