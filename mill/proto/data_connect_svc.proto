syntax = "proto3";

package io.qpointz.mill;

option java_multiple_files = true;
option java_package = "io.qpointz.mill.proto";

import "substrait/plan.proto";
import "common.proto";
import "statement.proto";
import "vector.proto";

service DataConnectService {
  rpc Handshake (HandshakeRequest) returns (HandshakeResponse);
  rpc ListSchemas(ListSchemasRequest) returns (ListSchemasResponse);
  rpc GetSchema(GetSchemaRequest) returns (GetSchemaResponse);

  rpc ParseSql(ParseSqlRequest) returns(ParseSqlResponse);

  rpc ExecQuery(QueryRequest) returns(stream QueryResultResponse);
  rpc SubmitQuery(QueryRequest) returns (QueryResultResponse);
  rpc FetchQueryResult(QueryResultRequest) returns (QueryResultResponse);
}

message HandshakeRequest {
}

message HandshakeResponse {

  message Capabilities {
    bool supportSql = 1;
    bool supportResultPaging = 2;
  }

  message AuthenticationContext {
    string name = 1;
  }

  ProtocolVersion version = 2;
  Capabilities capabilities = 3;
  AuthenticationContext authentication = 4;
  map<int32, MetaInfoValue> metas = 1;

}

enum MetaInfoKey {
  SEP = 0;
  DEP = 1;
}

message MetaInfoValue {
  oneof value {
    bool booleanValue = 10;
    string stringValue = 11;
    int32 int32Value = 12;
    int64 int64Value = 13;
  }
}

message ListSchemasRequest {
}

message ListSchemasResponse {
  repeated string schemas = 2;
}

message GetSchemaRequest {
  string schemaName = 2;
}

message GetSchemaResponse {
  Schema schema = 2;
}

message ParseSqlRequest {
  SQLStatement statement = 2;
}

message ParseSqlResponse {
  optional substrait.Plan plan = 3;
}

message QueryExecutionConfig {
  message Attributes {
    repeated string names = 1;
    repeated int32 indexes = 2;
  }

  int32 fetchSize = 1;
  optional Attributes attributes = 2;
}

message QueryRequest {
  QueryExecutionConfig config = 1;
  oneof query {
    substrait.Plan plan = 2;
    SQLStatement statement = 3;
  }
}

message QueryResultRequest {
  string pagingId = 1;
  int32 fetchSize = 2;
}

message QueryResultResponse {
  optional string pagingId = 1;
  optional VectorBlock vector = 2;
}
