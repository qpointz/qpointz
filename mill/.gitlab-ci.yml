include:  
  - local : /.gitlab/vars.yml
  - local : /.gitlab/jobs.yml

stages:
  - init
  - test
  - build
  - package
  - check
  - publish
  - test-integration

workflow:
  rules:
    - when : always

.gradle-job:
  image:
    name: azul/zulu-openjdk:17-latest
  variables:
    GRADLE_USER_HOME: ${CI_PROJECT_DIR}/mill/.gradle-home
  cache: &global_cache
    key: $CI_COMMIT_REF_SLUG
    paths:
      - ${CI_PROJECT_DIR}/mill/.gradle
      - ${CI_PROJECT_DIR}/mill/.gradle-home

mill:init-version:
  stage: init
  extends: .init-next-version

mill:init-certs:
  stage: init
  extends: .init-dev-certs    

mill:unit-tests:
  extends: .gradle-job
  stage: test
  script:
    - echo $HOME
    - cd ${CI_PROJECT_DIR}/mill
    - ./gradlew --no-daemon --console plain clean test check
    - ls ${CI_PROJECT_DIR}/mill/.gradle-home
  needs:
    - job: mill:init-version
      artifacts: true
  artifacts:
    when: always
    reports:
      junit: ${CI_PROJECT_DIR}/mill/**/build/test-results/*/*.xml
      coverage_report:
        coverage_format: jacoco
        path: ${CI_PROJECT_DIR}/mill/build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml
    paths:
      - ${CI_PROJECT_DIR}/mill/**/build/test-results/*/*.xml
      - ${CI_PROJECT_DIR}/mill/**/build/test-results/*/*.xml

mill:install-dist:
  extends: .gradle-job
  stage: package
  needs:
    - job: mill:init-version
      artifacts: true
  script:
    - cd ${CI_PROJECT_DIR}/mill
    - ./gradlew --no-daemon --console plain clean installDist
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/mill/**/build/install/**/*

.calcite-backend-service-build-docker-image:
  extends: .docker-build-job
  variables:
    DOCKER_BUILD_CTX: ${CI_PROJECT_DIR}/mill/calcite-backend-service
    DOCKER_BUILD_FILE: ${CI_PROJECT_DIR}/mill/calcite-backend-service/src/main/docker/Dockerfile
    DOCKER_BUILD_CONTAINER_NAME : calcite-backend-service
  needs:
    - job: mill:install-dist
      artifacts: true
    - job: mill:unit-tests
      artifacts: false
    - job: mill:init-version
      artifacts: true

mill:calcite-backend:build-docker-local:
  extends: .calcite-backend-service-build-docker-image
  stage: package
  variables:
    DOCKER_LOCAL_ONLY: "true"

mill:calcite-backend:build-docker:
  extends: .calcite-backend-service-build-docker-image
  stage: publish


mill:jdbc-backend-service:build-docker:
  extends: .docker-build-job
  stage: publish
  variables:
    DOCKER_BUILD_CTX: ${CI_PROJECT_DIR}/mill/jdbc-backend-service
    DOCKER_BUILD_FILE: ${CI_PROJECT_DIR}/mill/jdbc-backend-service/src/main/docker/Dockerfile
    DOCKER_BUILD_CONTAINER_NAME : jdbc-backend-service
    DOCKER_BUILD_ARGS: "--build-arg MY=HJ"
  needs:
    - job: mill:install-dist
      artifacts: true
    - job: mill:unit-tests
      artifacts: false
    - job: mill:init-version
      artifacts: true

sonarqube-check:
  extends: .gradle-job
  stage: check
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/mill/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
    SONAR_TOKEN: ${SONAR_DELTA_TOKEN}
  needs: []
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - cd ${CI_PROJECT_DIR}/mill
    - ./gradlew --no-daemon --console plain clean test jacocoTestReport  jacocoTestReport sonar
  allow_failure: true
  only:
    - dev

mill:maven-publication-create:
  extends: .gradle-job
  stage: publish
  before_script:
    - echo -n "${SIGN_PGP_RING}" | base64 --decode > ${CI_PROJECT_DIR}/.keyring.kbx
  script:
    - cd ${CI_PROJECT_DIR}/mill
    - ./gradlew --no-daemon --console plain clean publish publishSonatypeBundle -Psigning.keyId=${SIGN_PGP_KEY_ID} -Psigning.password=${SIGN_PGP_PASS} -Psigning.secretKeyRingFile=${CI_PROJECT_DIR}/.keyring.kbx -Pgitlab_token=${CI_JOB_TOKEN}
  needs:
    - job: mill:init-version
      artifacts: true
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/mill/build/sonatype-bundle/**/*
      - ${CI_PROJECT_DIR}/mill/build/sonatype-bundle/*

mill:maven-publish:
  image: ${CI_IMAGE_BASE}
  stage: publish
  script:
    - !reference [.global-vars, before_script]
    - export SONATYPE_TOKEN=Authorization:\ Bearer\ $(echo -n $SONATYPE_USERNAME:$SONATYPE_PASSWORD | base64)
    - export SONATYPE_PUBLISHING_TYPE="USER_MANAGED"
    - |
        if [[ "main" == "${CI_COMMIT_REF_SLUG}" ]]
        then
          export SONATYPE_PUBLISHING_TYPE="AUTOMATIC"
        fi      
    - export SONATYPE_URL="https://central.sonatype.com/api/v1/publisher/upload?publishingType=${SONATYPE_PUBLISHING_TYPE}&name=mill-${QP_VERSION}-${CI_COMMIT_REF_SLUG}-$(date +%Y%m%d_%H%M%S)"
    - echo $SONATYPE_URL
    - curl -X POST -v --header "$SONATYPE_TOKEN" --form bundle=@${CI_PROJECT_DIR}/mill/build/sonatype-bundle/sonatype-bundle.zip $SONATYPE_URL
  needs:
    - job: mill:unit-tests
      artifacts: true
    - job: mill:maven-publication-create
      artifacts: true
    - job: mill:init-version
      artifacts: true
#  rules:
#    - if: $CI_COMMIT_REF_PROTECTED == "true" && $CI_COMMIT_REF_SLUG != "dev"
#      when: always